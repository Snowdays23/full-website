# Generated by Django 4.1.3 on 2022-12-06 13:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EatingHabits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vegetarian', models.BooleanField(default=False, verbose_name='vegetarian')),
                ('vegan', models.BooleanField(default=False, verbose_name='vegan')),
                ('gluten_free', models.BooleanField(default=False, verbose_name='gluten intolerant')),
                ('lactose_free', models.BooleanField(default=False, verbose_name='lactose intolerant')),
            ],
            options={
                'verbose_name_plural': 'Eating habits objects',
            },
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(verbose_name='rental day')),
                ('name', models.CharField(choices=[('ski', 'Sci'), ('snowboard', 'Snowboard'), ('helmet', 'Casco'), ('poles', 'Racchette'), ('skiboots', 'Scarponi da sci'), ('snowboardboots', 'Scarponi da snowboard')], default='ski', max_length=16, verbose_name='name of rented gear')),
            ],
            options={
                'verbose_name_plural': 'Gear items',
            },
        ),
        migrations.CreateModel(
            name='MerchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name identifying this item')),
                ('size', models.CharField(choices=[('NA', 'not applicable'), ('U', 'unisize'), ('S', 'small'), ('M', 'medium'), ('L', 'large'), ('XL', 'extra large')], default='NA', max_length=2, verbose_name='size of this item (if applicable)')),
                ('color', models.CharField(blank=True, max_length=20, null=True, verbose_name='color code of this item (if applicable)')),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name of this sport activity')),
                ('rules', models.TextField(blank=True, null=True, verbose_name='rules and details of this sport activity')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='starting time of this scheduled sport activity')),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=8, verbose_name='code identifying university')),
                ('name', models.TextField(verbose_name='full name of institution')),
                ('email_domain', models.TextField(verbose_name='domain name associated with this university')),
            ],
            options={
                'verbose_name_plural': 'Universities',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(verbose_name='date of birth')),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('N', 'other/neutral/unspecified')], default='N', max_length=1, verbose_name='gender')),
                ('phone', models.CharField(max_length=16, verbose_name='personal mobile number')),
                ('student_nr', models.CharField(max_length=16, verbose_name='registration number within university')),
                ('bracelet_id', models.CharField(blank=True, max_length=16, null=True, verbose_name='UID of the RFID bracelet associated with this participant')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='height in centimeters')),
                ('weight', models.IntegerField(blank=True, null=True, verbose_name='weight in kilograms')),
                ('shoe_size', models.IntegerField(blank=True, null=True, verbose_name='european shoe size')),
                ('helmet_size', models.CharField(blank=True, choices=[('S', 'small'), ('M', 'medium'), ('L', 'large'), ('XL', 'extra large')], max_length=2, null=True, verbose_name='head size')),
                ('additional_notes', models.TextField(blank=True, null=True, verbose_name='additional requests specified by this participant')),
                ('internal', models.BooleanField(default=False, verbose_name='flag indicating whether this participant belongs to the host university')),
                ('needs_accomodation', models.BooleanField(default=False, verbose_name='flag indicating whether this participant needs a schlafi')),
                ('eating_habits', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snowdays23.eatinghabits', verbose_name='special eating needs declared by this participant')),
                ('rented_gear', models.ManyToManyField(blank=True, to='snowdays23.gear', verbose_name='equipment items requested for rental')),
                ('schlafi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='snowdays23.participant', verbose_name='internal participant hosting this participant')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='snowdays23.university', verbose_name='university to which this participant is enrolled')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='system user associated with this participant')),
            ],
        ),
    ]
